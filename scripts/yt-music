#!/bin/bash
#add colors
RED='\033[0;31m'
NC='\033[0m'
GREEN='\033[0;32m'
#check version
current=version=1.3

site1="github.com"
site2="gitlab.com"
site3="git.archuser.org"

# Function to check website availability
check_website() {
    response=$(curl -Is "$1" | head -n 1)
    if [[ $response == *"200"* ]]; then
        echo "Website $1 is available."
        return 0
    else
        echo "Website $1 is not available."
        return 1
    fi
}

# Check availability of websites in order
if check_website "https://$site1"; then
    echo "Checking version using $site1:"
    latest=$(curl -s https://$site1/FireBADnoFire/yt-dlp-utils/-/raw/main/version.txt | sed -n -e 3p)
elif check_website "https://$site2/FireBADnoFire"; then
    echo "Checking version using $site2:"
    latest=$(curl -s https://$site2/FireBADnoFire/yt-dlp-utils/-/raw/main/version.txt | sed -n -e 3p)
elif check_website "https://$site3"; then
    echo "Checking verison using $site3:"
    latest=$(curl -s https://$site3/FireBADnoFire/yt-dlp-utils/-/raw/main/version.txt | sed -n -e 3p) 
    else
    echo "Not able to varify if you are up to date. Exiting..."
    exit
fi



latest=$(curl -s https://gitlab.com/FireBADnoFire/yt-dlp-utils/-/raw/main/version.txt | sed -n -e 3p)

#compare version
if [[ "$latest" == "$current" ]]; then
echo -e "${GREEN}You are up to date!${NC}"
else
echo -e "${RED} Your softare is out of date! ${NC}Pull the latest repo to update!"
#remove "exit" below to use this anyway
exit
fi


if ! command -v yt-dlp &> /dev/null
then
    echo "yt-dlp could not be found"
sleep 1
	exit
fi
if ! command -v ffmpeg &> /dev/null
then
    echo "ffmpeg could not be found"
sleep 1
        exit
fi
PFILE=~/.config/ytdlputils/
FILE=~/.config/ytdlputils/ytdlpmusic.conf
echo "checking for default save path"
sleep 1
if [ -f "$FILE" ]; then
	change=$(sed -n -e 3p $FILE)
else
echo "$FILE not found"
sleep 1
mkdir -p $PFILE
read -p "Input directory you want to save music files to by default (Use full path name ex: /home/YOURUSERNAME/Downloads): " rootdir
cat <<EOF > $FILE
#this file was made to ensure that yt-dlp knows where to save your music
#edit this directory if you with to change it
$rootdir
EOF
change=$(sed -n -e 3p $FILE) 
fi
echo "OK"
cd $change
echo "You will download to:"
pwd
while true
do
	read -r -p "Do you want to add a directory to put your song(s) in? [y/n] " input

	case $input in
	    [yY][eE][sS]|[yY])
			echo "Input directory name" && read dir && mkdir -p $dir && cd $dir; echo "You will now download to:"; pwd
			break
			;;
	    [nN][oO]|[nN])
			sleep 1
			break
	       		;;
	    *)
		echo "Please answer yes or no"
		;;
	esac
done
echo input youtube url.
read url
yt-dlp --extract-audio --audio-format mp3 -i $url

